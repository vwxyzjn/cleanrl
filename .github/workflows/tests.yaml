name: tests
on:
  push:
    paths-ignore:
      - '**/README.md'
      - 'docs/**/*'
      - 'cloud/**/*'
  pull_request:
    paths-ignore:
      - '**/README.md'
      - 'docs/**/*'
      - 'cloud/**/*'
jobs:
  test-core-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # classic control tests
      - name: Install core dependencies
        run: poetry install --with pytest
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run core tests
        run: poetry run pytest tests/test_classic_control.py
      - name: Install jax
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: poetry install --with jax
      - name: Run core tests with jax
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: poetry run pytest tests/test_classic_control_jax.py
      - name: Install tuner dependencies
        run: poetry install --with optuna
      - name: Run tuner tests
        run: poetry run pytest tests/test_tuner.py

  test-atari-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # atari tests
      - name: Install atari dependencies
        run: poetry install --with pytest,atari
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run atari tests
        run: poetry run pytest tests/test_atari.py
      - name: Install jax
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: poetry install --with jax
      - name: Run core tests with jax
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: poetry run pytest tests/test_atari_jax.py

  test-pybullet-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # pybullet tests
      - name: Install core dependencies
        run: poetry install --with pytest
      - name: Install pybullet dependencies
        run: poetry install --with pybullet
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run pybullet tests
        run: poetry run pytest tests/test_pybullet.py

  test-procgen-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # procgen tests
      - name: Install core dependencies
        run: poetry install --with pytest,procgen
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run pybullet tests
        run: poetry run pytest tests/test_procgen.py


  test-mujoco-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # mujoco tests
      - name: Install core dependencies
        run: poetry install --with pytest
      - name: Install pybullet dependencies
        run: poetry install --with pybullet
      - name: Install mujoco dependencies
        run: poetry install --with mujoco
      - name: Install jax dependencies
        run: poetry install --with jax
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: install mujoco dependencies
        run: |
          sudo apt-get update && sudo apt-get -y install wget unzip software-properties-common \
            libgl1-mesa-dev \
            libgl1-mesa-glx \
            libglew-dev \
            libosmesa6-dev patchelf
      - name: Run mujoco tests
        run: poetry run pytest tests/test_mujoco.py

  test-envpool-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # envpool tests
      - name: Install envpool dependencies
        run: poetry install --with pytest,envpool,jax
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run envpool tests
        run: poetry run pytest tests/test_envpool.py

  test-atari-multigpu-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # atari multigpu tests
      - name: Install atari dependencies
        run: poetry install --with pytest,atari
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Run atari tests
        run: poetry run pytest tests/test_atari_multigpu.py

  test-pettingzoo-envs:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.2]
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      # pettingzoo tests
      - name: Install pettingzoo dependencies
        run: poetry install --with pytest,pettingzoo,atari
      - name: Downgrade setuptools
        run: poetry run pip install setuptools==59.5.0
      - name: Install ROMs
        run: poetry run AutoROM --accept-license
      - name: Run pettingzoo tests
        run: poetry run pytest tests/test_pettingzoo_ma_atari.py